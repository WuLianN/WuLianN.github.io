import{o as n,c as a,a as s}from"./app.e442abeb.js";const t='{"title":"Vue3","description":null,"frontmatter":{"title":"Vue3","description":null,"author":"夜深_静悟","tag":["Vue"],"date":"2021-05-12","image":"https://api.bearcub.club/beauty/l_u_1569200875_9rwx0CV2.jpeg"},"headers":[{"level":2,"title":"Vue","slug":"vue"},{"level":3,"title":"介绍","slug":"介绍"},{"level":3,"title":"起步","slug":"起步"},{"level":2,"title":"reactive","slug":"reactive"},{"level":3,"title":"代码演示","slug":"代码演示"},{"level":2,"title":"effect","slug":"effect"}],"relativePath":"docs/vue/vue3.md","lastUpdated":1621304862877}',e={},p=s('<h2 id="vue"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h2><br><h3 id="介绍"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h3><br><p>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><br><h3 id="起步"><a class="header-anchor" href="#起步" aria-hidden="true">#</a> 起步</h3><br><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>官方指南假设你已了解关于 HTML、CSS 和 JavaScript 的中级知识。如果你刚开始学习前端开发，将框架作为你的第一步可能不是最好的主意——掌握好基础知识再来吧！之前有其它框架的使用经验会有帮助，但这不是必需的</p></div><p>尝试 Vue.js 最简单的方法是使用 Hello World 例子，你可以在浏览器新标签页中打开它，跟着例子学习一些基础用法。</p><p>安装教程给出了更多安装 Vue 的方式。请注意我们不推荐新手直接使用 vue-cli，尤其是在你还不熟悉基于 Node.js 的构建工具时。</p><br><h2 id="reactive"><a class="header-anchor" href="#reactive" aria-hidden="true">#</a> reactive</h2><br><h3 id="代码演示"><a class="header-anchor" href="#代码演示" aria-hidden="true">#</a> 代码演示</h3><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">reactive</span><span class="token punctuation">(</span>target<span class="token operator">:</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// if trying to observe a readonly proxy, return the readonly version.</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> Target<span class="token punctuation">)</span><span class="token punctuation">[</span>ReactiveFlags<span class="token punctuation">.</span><span class="token constant">IS_READONLY</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> target\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token function">createReactiveObject</span><span class="token punctuation">(</span>\n    target<span class="token punctuation">,</span>\n    <span class="token boolean">false</span><span class="token punctuation">,</span>\n    mutableHandlers<span class="token punctuation">,</span>\n    mutableCollectionHandlers<span class="token punctuation">,</span>\n    reactiveMap\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><br><h2 id="effect"><a class="header-anchor" href="#effect" aria-hidden="true">#</a> effect</h2><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">effect</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  <span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n  options<span class="token operator">:</span> ReactiveEffectOptions <span class="token operator">=</span> <span class="token constant">EMPTY_OBJ</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEffect</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    fn <span class="token operator">=</span> fn<span class="token punctuation">.</span>raw\n  <span class="token punctuation">}</span>\n  <span class="token keyword">const</span> effect <span class="token operator">=</span> <span class="token function">createReactiveEffect</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> options<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> effect\n<span class="token punctuation">}</span>\n</code></pre></div>',19);e.render=function(s,t,e,o,c,l){return n(),a("div",null,[p])};export default e;export{t as __pageData};
